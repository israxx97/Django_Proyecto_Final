"""
Django settings for Django_Israel_Garcia_Cabaneros project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '*&70-fjzt7p17h1#6jqm+0l4b)02vdx&ew8+a8#l^v-8mwl3i9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'registration',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Añadiremos las apps que vayamos creando.
    'core',
    'productos',
    'social.apps.SocialConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Django_Israel_Garcia_Cabaneros.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social.processors.ctx_dict',
                'core.processors.ctx_vinos',
                'core.processors.ctx_bodega',
                'core.processors.ctx_vino',
                'productos.processors.ctx_vinos_unidades_vendidas',
            ],
        },
    },
]


# Admins
# https://docs.djangoproject.com/en/3.0/ref/settings/#admins

ADMINS = [
    ('Israel', 'isragarcia97@gmail.com')
]


# Wsgi Application
# https://docs.djangoproject.com/en/3.0/ref/settings/#wsgi-application

WSGI_APPLICATION = 'Django_Israel_Garcia_Cabaneros.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        # Pueden usarse 4 Sistemas Gestores de Bases de Datos (sqlite3, mysql, postgresql y oracle).
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        # Si usáramos cualquier SGBD distinto a sqlite3 deberíamos de añadir los campos USER,
        # PASSWORD, PORT y HOST, además de los 2 que ya vienen por defecto (ENGINE y NAME).
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'es-ES'

TIME_ZONE = 'Europe/Madrid'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'


# Constantes propias.

""" Ruta donde guardaremos todos los archivos media que vayamos subiendo,
(ir a models y un atributo de la clase donde se guarden imágenes (mirar upload_to)). """

MEDIA_URL = '/media/'  # No se usará para MEDIA_ROOT, se usara en urls.py.
MEDIA_ROOT = os.path.join(BASE_DIR, "media")


# Auth redirecciones.
LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'home'
